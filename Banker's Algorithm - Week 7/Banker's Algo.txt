#include<stdio.h>

void main(){
    int p,r;
    printf("Enter the no.of Processes:\n");
    scanf("%d", &p);

    printf("Enter the no.of Resources:\n");
    scanf("%d", &r);

    int finish[p], available[r], allocate[p][r], need[p][r], max[p][r], safe[p];
    int count=0,i,j;

    printf("Enter the allocation matrix:\n ");
    for(i=0; i<p; i++){
        for(j=0; j<r; j++) scanf("%d", &allocate[i][j]);
    }

    printf("Enter the Max matrix:\n ");
    for(i=0; i<p; i++){
        for(j=0; j<r; j++) scanf("%d", &max[i][j]);
    }

    printf("Enter the Available resources matrix:\n ");
    for(i=0; i<r; i++){
        scanf("%d", &available[i]);
    }

    for(i=0; i<p; i++){
        for(j=0; j<r; j++) need[i][j]=max[i][j] - allocate[i][j];
    }

    for(i=0; i<p; i++){
        finish[i] = 0;
    }

    int canAllocate;
    while(count < p){
        int found=0;
        for(i=0; i<p; i++){
            if(finish[i]==0){
                    canAllocate=1;
                for(j=0; j<r; j++){
                    if(need[i][j]>available[j]){
                        canAllocate = 0;
                        break;
                    }
                }

        if(canAllocate==1){
            for(j=0; j<r; j++) available[j]+=allocate[i][j];
            found=1;
            finish[i] = 1;
            safe[count++] = i;
        }
        }
    }

        if(found==0){
            printf("Processes are in Deadlock and hence system is not in safe state\n");
            return;
        }

    }
    printf("\n\nSafe state sequence:\n\n");
    for(i=0; i<p; i++){
        printf("Process %d is in safe state\n",safe[i]);
    }

    printf("\nContents of Need matrix are:\n");
    for(i=0; i<p; i++){
        for(j=0; j<r; j++) printf("%d\t",need[i][j]);
        printf("\n");
    }


}
